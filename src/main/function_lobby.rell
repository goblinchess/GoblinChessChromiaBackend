
// -------------------------------------
// Lobby
// -------------------------------------



function get_lobby_entry_inner(requesting_player: player,
    game_type_str: text,
    curr_ms: timestamp) :pubkey? {

    val g_type: game_type = game_type.value(game_type_str);

    val old_ms = 10 * 1000; // 10 seconds

    // Find closest ELO match in lobby for the same game type
    // Exclude the requesting player and filter by ELO range
    val match = (l: lobby, p: player) @? {
        p == l.player,
        l.game_type == g_type,
        p != requesting_player, // So we don't match with ourselves
        abs(p.elo_rating - requesting_player.elo_rating) <= 200,
        curr_ms - l.last_heartbeat < old_ms
    }
    ( @sort abs(p.elo_rating - requesting_player.elo_rating), p.signer )
    limit 1;

    if (match == null) {
        return null;
    }
    else {
        return match.signer;
    }

}