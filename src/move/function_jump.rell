// ----------------
// Inspectors
// ----------------

function move_has_enchanted_jump(pg: player_game, p: piece): boolean {
    val found = active_jump@? { pg, p };

    return found != null;
}

// ----------------
// Mutators
// ----------------

// When a jump card is played, we need to set up the jump on the board.
function move_set_jump(owned_by: player_game, card: card, piece: piece) {
    create active_jump (
        .played_by = owned_by,
        .card = card,
        .piece = piece
    );
}


function move_remove_enchanted_jump(owned_by: player_game) {
    delete active_jump@? {.played_by == owned_by};
}