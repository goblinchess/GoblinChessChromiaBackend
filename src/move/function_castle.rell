

//Only moronic validation for costling, leave the rest to the client.
function move_castle_verify_and_return_rook(
    game_id: integer, 
    from_position: integer, 
    to_position: integer, 
    castle_rook_from: integer,
    castle_rook_to: integer,
    p_type: piece_type, 
    is_white: boolean, 
    player_game: player_game
): piece {
    require(p_type == piece_type.KING, "Only kings can castle, id:" + game_id);

    if (is_white) {
        require(from_position == 4, "White king must not have moved, " + from_position + ", id: " + game_id);
        require(castle_rook_from == 0 or castle_rook_from == 7, "Rook must not have moved: " + castle_rook_from + ", id:" + game_id);
    } else {
        require(from_position == 60, "Blakc king must not have moved, " + from_position + ", id: " + game_id);
        require(castle_rook_from == 63 or castle_rook_from == 56, "Rook must not have moved: " + castle_rook_from + ", id:" + game_id);
    }

    val rook = piece_get_via_owner_and_position(player_game, castle_rook_from);
    require(rook != null, "No rook at position " + castle_rook_from + ", id:" + game_id);
    return rook;
}