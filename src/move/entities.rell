
// This module: 
// Holds logic around moves on the board.
//
// Note:
// To be able to verify a move, we often need to know a bit about what 
// cards have been played, like the portal card and the jump card.
// So everything we need will be put in here, so that there is no 
// dependency on the card module.


// -------------------------------------
// Vulnerable Path
// -------------------------------------

// We save the most recent vulnerable position for each player.
//
// Most common case:
// A pawn two-step move, generating exactly one vulnerable_position. 
entity current_vuln_path {
    index game: game; 
    color: alignment; // If the "mover" was white/black.
    key game, color; // Can only ever be ONE vuln path per player.
    move: move;
    encoded_path: text; // 0-63_0-63_0-63_0-63 e.g. 9_17_25 , where first number is the first position.
}






