

// Sent back to the client
struct in_game_result {
    game_rowid: integer;
    game_type: game_type;
    is_white: boolean;
    opponent_pubkey: pubkey;
    opponent_name: text;
    opponent_elo: integer;
    curr_turn_nr: integer; // If the game just started, this will be 0
    created_at: timestamp; // When the game was created
}

// Internal use
// Return mostly a bunch of primary keys     
struct minimal_game_result {
    player: player;
    player_game: player_game;
    game: game;
    game_type: game_type;
    curr_turn_nr: integer; // We always check this, so best to store it.
    is_white: boolean;
}

/*
struct random_box {
    base_seed: integer; // The seed we began with (should be same for the entire game)
    current_seed: integer; // The seed we are currently using
}*/

// The result of N random numbers with the same max value.
struct random_results {
    results: list<integer>;
    base_seed: integer; // The seed used to generate the results
    new_seed: integer; // Use this to generate more random numbers later
}

