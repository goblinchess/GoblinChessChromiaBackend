
// -------------------------------------
// Card
// -------------------------------------

operation skip_card(
    game_id: integer, 
    last_seen_turn: integer // What turn the client last saw.
) {
    val current_signers = op_context.get_signers();
    val caller_pubkey = current_signers[0];
    
    card_skip_inner(
        caller_pubkey,
        game_id,
        last_seen_turn
    );
}
 
// -------------------------------------
// Play a card during a player's card turn
// Main work is that every single card type needs specific verification.
// -------------------------------------
operation play_card(
    game_id: integer, 
    last_seen_turn: integer, // What turn the client last saw.
    card_type_str: text, 
    card_order_number: integer, // The order number when the card was drawn/generated, starting from 0.
    card_picks: list<integer>, // The squares picked by the player when playing the card.
    rnd_numbers: list<rnd_data> // If any randomness was used playing this card, the numbers generated goes in here.
) {
    val current_signers = op_context.get_signers();
    val caller_pubkey = current_signers[0];

    card_play_inner(
        caller_pubkey,
        game_id, 
        last_seen_turn, 
        card_type_str, 
        card_order_number, 
        card_picks,
        rnd_numbers
    );
}

