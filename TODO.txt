
// TODO: Implement!
   public void OnlineSendSkipMoveTx(TurnEndEvents turnEndEvents) {


            // ---------------------
            // 4: (Potentially) send move to node
            // ---------------------
            // We only do this for ME (not the opponent)
            TurnOwner owner = _octt.TeamColor2Owner(drama.LeadAlign.Align);
            if (_board.IsGameOnline() && owner == TurnOwner.Me) // Only ONLINE uses a server
            {
                TurnOnlineMoveData tomd = new TurnOnlineMoveData(_tCtxt, _battleResult, leadActualPath, tee, _board.GetOnlineGameGeneral());
                // _board.SendMoveToNode(tomd); // TODO <--- Send it somehowe
            }


            if (isPrimary) {
                return _board.SkipOnlineOpponentAction(checkData, endArgs);
            } else {
                // TODO: What to do?
                return planningMode.HandleAsyncActionSkipped(turnId, _board, endEvents);
            }


- We had White/Black in cleartext for My/Opp in the Board._reportXAction() for
  portal??
  This is now replaced, but must be tested.

a) Test time-out of old ongoing games.
b) Test time_left param.

 TODO Client: 
-------------

- Call the "fetch data" method for moves and cards.

- Should we send "is_knighted" and "is_enchanted_jumper" on every call? Is it perhaps too hard to find this info?

- Create a C# Chromia client.

- Use Timeout and put clock on the chess scene.
 

Client Done: 

- Assemble data to send to the server (both for Noramal AND skip).
- ChrCardPlayedData -> GcCardPlayedData
- When fetching data, the timing for double turns is complex, since we might have to
  wait for data to arrive OR wait for the turn to complete.
- Use the new gameId, lastSeenTurn params in ALL move/card operation.
- Adding the GetGcCardPlayedData() to the MagicModeSpell interface (so we can
  send it via the play_card tx).
- Make sure we count up the Turns every time we fetch/send some data.


 TODO Node: 
-------------
 
 2. Finish the game when mate

 4. Use Luck

 6. Look in [move] entity before allowing castle.


Node DONE:



 Videos
-------------
 Make an event performance video!
 (Main Idea is to explain that making one SQL-call to fetch all events for a turn is the trick)

